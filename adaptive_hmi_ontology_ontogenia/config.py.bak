"""
Configuration settings for the Adaptive HMI Ontology generation.
"""

# API Configuration
API_URL = "https://6poq7jfwb5xl3xujin32htosoq0mqlxz.lambda-url.eu-central-1.on.aws/"

# Ontology Configuration
ONTOLOGY_PREFIX = """
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ahmi: <http://example.org/adaptive-hmi#> .

<http://example.org/adaptive-hmi> a owl:Ontology ;
    rdfs:label "Adaptive Human-Machine Interface Ontology"@en ;
    rdfs:comment "An ontology for describing adaptive human-machine interfaces with a focus on driver state detection and multimodal feedback"@en .
"""

# File paths
PATTERNS_PATH = "data/patterns.csv"
COMPETENCY_QUESTIONS_PATH = "data/competency_questions.csv"
USER_STORIES_PATH = "data/user_stories.csv"
OUTPUT_DIR = "data/output/"

# Ontogenia prompting configuration
ONTOLOGY_ELEMENTS = """
Classes, Object Properties, Datatype Properties. Object properties need to have domain and range. 
All of them need to have an explanation in the rdfs:label. You also need to add restrictions, 
and subclasses for both classes and object properties when applicable.
"""

# Metacognitive Prompting Procedure for Ontology Design
METACOGNITIVE_PROCEDURE = """
As an ontology engineer, follow these steps to design an ontology module:

1. ANALYZE THE COMPETENCY QUESTION:
   - Understand the competency question (CQ) thoroughly
   - Identify the key components that need to be modeled
   - Consider the user story to establish context and extract domain terminology
   - Determine if the question is about events themselves or different views (situations) of those events

2. IDENTIFY THE CONTEXT:
   - Define the scope and domain of the ontology
   - Consider the boundaries of what should be included
   - Identify the key actors, actions, and relationships in the user story
   - Distinguish between the descriptions (conceptualizations) and the situations they define

3. DECOMPOSE THE COMPETENCY QUESTION:
   - Break down the CQ into subject, predicate, object, and predicate nominative
   - Map these elements to ontological constructs:
     * Subjects and objects → Classes
     * Predicates → Object Properties
     * Descriptive attributes → Datatype Properties
   - Pay special attention to driver states, vehicle systems, feedback modalities, and environmental factors
   - Consider whether to model aspects as events (with their identity) or as situations (views on events)

4. DETERMINE SUBCLASS RELATIONSHIPS:
   - Establish "is-a" relationships using rdfs:subClassOf
   - Create a hierarchical structure where appropriate
   - Organize driver states, detection methods, feedback types, and adaptation strategies into coherent taxonomies
   - Classify events as processes when they are considered in their evolution

5. EXTEND THE ONTOLOGY WITH RESTRICTIONS:
   - Apply restrictions like owl:allValuesFrom, owl:hasValue, and owl:someValuesFrom
   - Define cardinality with owl:minCardinality, owl:maxCardinality, or owl:cardinality
   - Use owl:Restriction to define anonymous classes
   - Create appropriate restrictions for relationships between drivers, vehicles, and contexts
   - Define how situations observe or interpret events

6. DEFINE EQUIVALENT AND DISJOINT CLASSES:
   - Use owl:equivalentClass for classes with the same instances
   - Use owl:disjointWith for mutually exclusive classes
   - Identify states or conditions that cannot co-exist
   - Define disjoint relationships between events and objects

7. INTEGRATE AND REFINE:
   - Review all interrelationships for logical consistency
   - Ensure completeness in addressing the competency question
   - Make sure the ontology captures the key aspects of the user story
   - Check that different views of events are properly modeled as situations

8. VALIDATE AND EXPLAIN:
   - Confirm the ontology answers all CQs
   - Explain the reasoning behind each ontological element
   - Verify that the ontology can represent the scenarios described in the user story
   - Ensure that the ontology allows for multiple interpretations of the same events

9. EVALUATE CONFIDENCE AND TEST:
   - Test the ontology with instances
   - Assess confidence based on how well the ontology performs
   - Consider how well the ontology captures the adaptive aspects described in the user story
   - Verify that the ontology can distinguish between events themselves and different ways of viewing them
"""

# Extended patterns specific to Adaptive HMI domain
SAMPLE_PATTERNS = {
    "Driver-State": """
# Driver-State Pattern
:DriverState a owl:Class ;
    rdfs:label "Driver State"@en ;
    rdfs:comment "A state or condition of the driver"@en .

:DetectionMethod a owl:Class ;
    rdfs:label "Detection Method"@en ;
    rdfs:comment "A method or technique for detecting driver state"@en .

:detectedBy a owl:ObjectProperty ;
    rdfs:label "detected by"@en ;
    rdfs:comment "Relates a driver state to a detection method used to identify it"@en ;
    rdfs:domain :DriverState ;
    rdfs:range :DetectionMethod .
""",
    "Feedback-Adaptation": """
# Feedback-Adaptation Pattern
:Feedback a owl:Class ;
    rdfs:label "Feedback"@en ;
    rdfs:comment "Feedback provided to the driver by the vehicle"@en .

:Adaptation a owl:Class ;
    rdfs:label "Adaptation"@en ;
    rdfs:comment "An adaptation made by the vehicle in response to driver state"@en .

:triggers a owl:ObjectProperty ;
    rdfs:label "triggers"@en ;
    rdfs:comment "Relates a driver state to the adaptation it triggers"@en ;
    rdfs:domain :DriverState ;
    rdfs:range :Adaptation .

:providesFor a owl:ObjectProperty ;
    rdfs:label "provides for"@en ;
    rdfs:comment "Relates a feedback mechanism to the adaptation it implements"@en ;
    rdfs:domain :Feedback ;
    rdfs:range :Adaptation .
""",
    "Context-Influence": """
# Context-Influence Pattern
:EnvironmentalFactor a owl:Class ;
    rdfs:label "Environmental Factor"@en ;
    rdfs:comment "A factor in the environment that may influence driver state or system response"@en .

:DriverState a owl:Class ;
    rdfs:label "Driver State"@en ;
    rdfs:comment "A state or condition of the driver"@en .

:influences a owl:ObjectProperty ;
    rdfs:label "influences"@en ;
    rdfs:comment "Relates an environmental factor to the driver state it influences"@en ;
    rdfs:domain :EnvironmentalFactor ;
    rdfs:range :DriverState .

:affectsReliabilityOf a owl:ObjectProperty ;
    rdfs:label "affects reliability of"@en ;
    rdfs:comment "Relates an environmental factor to the detection method whose reliability it affects"@en ;
    rdfs:domain :EnvironmentalFactor ;
    rdfs:range :DetectionMethod .
""",
    "Driver-Profile": """
# Driver-Profile Pattern
:Driver a owl:Class ;
    rdfs:label "Driver"@en ;
    rdfs:comment "A person who operates the vehicle"@en .

:DriverProfile a owl:Class ;
    rdfs:label "Driver Profile"@en ;
    rdfs:comment "A profile containing information about a driver's preferences and characteristics"@en .

:hasProfile a owl:ObjectProperty ;
    rdfs:label "has profile"@en ;
    rdfs:comment "Relates a driver to their profile"@en ;
    rdfs:domain :Driver ;
    rdfs:range :DriverProfile .

:includesPreference a owl:ObjectProperty ;
    rdfs:label "includes preference"@en ;
    rdfs:comment "Relates a driver profile to a preference it includes"@en ;
    rdfs:domain :DriverProfile ;
    rdfs:range :Preference .
""",
    "Multimodal-Feedback": """
# Multimodal-Feedback Pattern
:FeedbackModality a owl:Class ;
    rdfs:label "Feedback Modality"@en ;
    rdfs:comment "A sensory modality through which feedback is provided to the driver"@en .

:VisualFeedback a owl:Class ;
    rdfs:label "Visual Feedback"@en ;
    rdfs:comment "Feedback provided through visual means"@en ;
    rdfs:subClassOf :FeedbackModality .

:AuditoryFeedback a owl:Class ;
    rdfs:label "Auditory Feedback"@en ;
    rdfs:comment "Feedback provided through auditory means"@en ;
    rdfs:subClassOf :FeedbackModality .

:HapticFeedback a owl:Class ;
    rdfs:label "Haptic Feedback"@en ;
    rdfs:comment "Feedback provided through tactile means"@en ;
    rdfs:subClassOf :FeedbackModality .

:providedThrough a owl:ObjectProperty ;
    rdfs:label "provided through"@en ;
    rdfs:comment "Relates feedback to the modality through which it is provided"@en ;
    rdfs:domain :Feedback ;
    rdfs:range :FeedbackModality .
""",
    "Situation-Event": """
# Situation-Event Pattern
:Situation a owl:Class ;
    rdfs:label "Situation"@en ;
    rdfs:comment "A view on events that is consistent with a description and can be observed on a set of entities. It can be seen as a relational context created by an observer based on a frame"@en .

:Event a owl:Class ;
    rdfs:label "Event"@en ;
    rdfs:comment "Any physical, social, or mental process, event, or state that has participants, occurs within a time interval, and can have parts or constituents that are themselves events"@en .

:Process a owl:Class ;
    rdfs:label "Process"@en ;
    rdfs:comment "Events that are considered in their evolution, or not strictly dependent on agents, tasks, and plans"@en ;
    rdfs:subClassOf :Event .

:observes a owl:ObjectProperty ;
    rdfs:label "observes"@en ;
    rdfs:comment "Relates a situation to the events it observes"@en ;
    rdfs:domain :Situation ;
    rdfs:range :Event .

:hasParticipant a owl:ObjectProperty ;
    rdfs:label "has participant"@en ;
    rdfs:comment "Relates an event to entities that participate in it"@en ;
    rdfs:domain :Event ;
    rdfs:range :Object .

:hasTimeInterval a owl:ObjectProperty ;
    rdfs:label "has time interval"@en ;
    rdfs:comment "Relates an event to its time interval"@en ;
    rdfs:domain :Event ;
    rdfs:range :TimeInterval .
""",
    "Description-Context": """
# Description-Context Pattern
:Description a owl:Class ;
    rdfs:label "Description"@en ;
    rdfs:comment "A conceptualization that provides a context for interpreting situations and events"@en .

:Situation a owl:Class ;
    rdfs:label "Situation"@en ;
    rdfs:comment "A view, consistent with a description, which can be observed of a set of entities"@en .

:consistentWith a owl:ObjectProperty ;
    rdfs:label "consistent with"@en ;
    rdfs:comment "Relates a situation to the description that provides its context"@en ;
    rdfs:domain :Situation ;
    rdfs:range :Description .

:defines a owl:ObjectProperty ;
    rdfs:label "defines"@en ;
    rdfs:comment "Relates a description to the concepts it defines"@en ;
    rdfs:domain :Description ;
    rdfs:range :Concept .
"""
}